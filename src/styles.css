* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.6;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 20px;
}

.game-title {
  text-align: center;
  margin-bottom: 20px;
  font-size: 2.5rem;
  font-weight: bold;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

.game {
  display: flex;
  flex-direction: row;
  gap: 20px;
  margin-bottom: 20px;
}

.game-board {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}

.board-container {
  position: relative;
  perspective: 1000px;
}

.board {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5px;
  background-color: #f0f0f0;
  padding: 10px;
  border-radius: 10px;
  border: 2px solid #333;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
}

.board:hover {
  transform: rotateX(5deg) rotateY(5deg);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

.board-row {
  display: flex;
  gap: 5px;
}

.square {
  width: 100px;
  height: 100px;
  border: 2px solid #333;
  border-radius: 8px;
  font-size: 48px;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
  position: relative;
  overflow: hidden;
}

.square::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.square:hover::before {
  opacity: 1;
}

.square.x {
  color: var(--x-color, #e74c3c);
}

.square.o {
  color: var(--o-color, #3498db);
}

.square:hover {
  transform: scale(1.05);
  background-color: var(--hover-bg, #e8e8e8);
}

.status {
  font-size: 1.2rem;
  margin-bottom: 10px;
  font-weight: bold;
  text-align: center;
  padding: 10px;
  border-radius: 5px;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.status.winner {
  font-size: 1.5rem;
  animation: pulse 1.5s infinite;
}

/* In styles.css, update the game-info class */
.game-info {
  flex: 1;
  background-color: #f0f0f0;
  padding: 15px;
  border-radius: 10px;
  max-height: 400px;
  min-width: 200px;
  overflow-y: auto;
  transition: background-color 0.3s ease;
}

.game-info h2 {
  margin-bottom: 15px;
  text-align: center;
}

.game-info ol {
  list-style-position: inside;
  padding-left: 10px;
}

.game-info li {
  margin-bottom: 8px;
}

.history-btn {
  background: transparent;
  border: none;
  padding: 5px 10px;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s ease, color 0.3s ease;
  font-size: 0.9rem;
}

.history-btn:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.history-btn.current {
  font-weight: bold;
}

.restart-btn {
  background-color: #333;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.restart-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.restart-btn:active {
  transform: translateY(0);
}

.game-options {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-bottom: 20px;
  flex-wrap: wrap;
}

.option-group {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.option-group label {
  font-weight: bold;
  font-size: 0.9rem;
}

.option-group select {
  padding: 8px;
  border-radius: 5px;
  border: 1px solid #ccc;
  background-color: #f0f0f0;
  cursor: pointer;
  transition: border-color 0.3s ease;
}

.option-group select:focus {
  outline: none;
  border-color: #3498db;
}

.score-board {
  background-color: #f0f0f0;
  padding: 15px;
  border-radius: 10px;
  margin-bottom: 20px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease;
}

.score-board h2 {
  text-align: center;
  margin-bottom: 15px;
}

.scores {
  display: flex;
  justify-content: space-around;
  text-align: center;
}

.score-item {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.player-name {
  font-weight: bold;
  margin-bottom: 5px;
}

.score-value {
  font-size: 1.5rem;
  font-weight: bold;
}

.player-names {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-bottom: 20px;
}

.player-input {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.player-input label {
  font-weight: bold;
  font-size: 0.9rem;
}

.player-input input {
  padding: 8px;
  border-radius: 5px;
  border: 1px solid #ccc;
  transition: border-color 0.3s ease;
}

.player-input input:focus {
  outline: none;
  border-color: #3498db;
}

.timer {
  text-align: center;
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 15px;
  transition: color 0.3s ease;
}

.confetti-canvas {
  pointer-events: none;
}

/* Animations */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes pop {
  0% { transform: scale(0.8); opacity: 0.5; }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); opacity: 1; }
}

/* Responsive design */
@media (max-width: 768px) {
  .game {
    flex-direction: column;
  }
  
  .square {
    width: 80px;
    height: 80px;
    font-size: 36px;
  }
  
  .game-options {
    flex-direction: column;
    align-items: center;
  }
  
  .option-group {
    width: 100%;
    max-width: 300px;
  }
  
  .player-names {
    flex-direction: column;
    align-items: center;
  }
  
  .player-input {
    width: 100%;
    max-width: 300px;
  }
}

@media (max-width: 480px) {
  .square {
    width: 60px;
    height: 60px;
    font-size: 28px;
  }
  
  .game-title {
    font-size: 2rem;
  }
  
  .scores {
    flex-direction: column;
    gap: 10px;
  }
}

/* Replace the Board CSS with this */
.board[data-size="3"] {
  --size: 3;
  grid-template-columns: repeat(1, 1fr);
}

.board[data-size="4"] {
  --size: 4;
  grid-template-columns: repeat(1, 1fr);
}

.board[data-size="5"] {
  --size: 5;
  grid-template-columns: repeat(1, 1fr);
}

.board-row {
  display: grid;
  grid-template-columns: repeat(var(--size, 3), 1fr);
  gap: 10px;
}

/* Dark mode */
.dark-mode .board {
  background-color: #2c3e50;
  border-color: #34495e;
}

.dark-mode .square {
  border-color: #34495e;
}

.dark-mode .square.x {
  color: #e74c3c;
}

.dark-mode .square.o {
  color: #3498db;
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Focus outlines for keyboard navigation */
button:focus-visible,
select:focus-visible,
input:focus-visible {
  outline: 2px solid #3498db;
  outline-offset: 2px;
}

/* High contrast mode */
@media (forced-colors: active) {
  .square.x {
    color: CanvasText;
  }
  
  .square.o {
    color: CanvasText;
  }
}

/* In styles.css, update these classes */
.restart-btn {
  background-color: #333;
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.restart-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
}

.restart-btn:active {
  transform: translateY(-1px);
}

.option-group select {
  padding: 10px 15px;
  border-radius: 8px;
  border: 2px solid #ccc;
  background-color: #f0f0f0;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 0.95rem;
}

.option-group select:hover {
  border-color: #999;
}

.option-group select:focus {
  outline: none;
  border-color: #3498db;
  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.3);
}

.history-btn {
  background: transparent;
  border: 2px solid transparent;
  padding: 8px 15px;
  cursor: pointer;
  border-radius: 6px;
  transition: all 0.3s ease;
  font-size: 0.95rem;
  width: 100%;
  text-align: left;
}

.history-btn:hover {
  background-color: rgba(0, 0, 0, 0.1);
  border-color: rgba(0, 0, 0, 0.1);
}

.history-btn.current {
  font-weight: bold;
  border-color: currentColor;
}

.player-input input {
  padding: 10px 15px;
  border-radius: 8px;
  border: 2px solid #ccc;
  transition: all 0.3s ease;
  font-size: 0.95rem;
}

.player-input input:hover {
  border-color: #999;
}

.player-input input:focus {
  outline: none;
  border-color: #3498db;
  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.3);
}

/* Add these to styles.css */
.game {
  display: flex;
  flex-direction: row;
  gap: 30px;
  margin-bottom: 30px;
  align-items: flex-start;
}

.board {
  display: grid;
  gap: 10px;
  background-color: #f0f0f0;
  padding: 15px;
  border-radius: 15px;
  border: 3px solid #333;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
  transition: all 0.3s ease;
}

.board-row {
  display: grid;
  grid-template-columns: repeat(var(--size, 3), 1fr);
  gap: 10px;
}

.square {
  width: 80px;
  height: 80px;
  border: 3px solid #333;
  border-radius: 12px;
  font-size: 42px;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.square:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
}

.game-board {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 25px;
}

.status {
  font-size: 1.3rem;
  margin-bottom: 15px;
  font-weight: bold;
  text-align: center;
  padding: 12px 20px;
  border-radius: 10px;
  background-color: rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
}

.status.winner {
  font-size: 1.6rem;
  animation: pulse 1.5s infinite;
  background-color: rgba(46, 204, 113, 0.2);
}

/* Replace the Board CSS with this */
.board[data-size="3"] {
  --size: 3;
  grid-template-columns: repeat(1, 1fr);
}

.board[data-size="4"] {
  --size: 4;
  grid-template-columns: repeat(1, 1fr);
}

.board[data-size="5"] {
  --size: 5;
  grid-template-columns: repeat(1, 1fr);
}

.board-row {
  display: grid;
  grid-template-columns: repeat(var(--size, 3), 1fr);
  gap: 10px;
}