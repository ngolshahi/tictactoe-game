{"ast":null,"code":"var _jsxFileName = \"/Users/nimagolshahi/Downloads/tictactoe-game/src/Game.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useTheme } from \"./ThemeContext\";\nimport Board from \"./Board\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport AudioManager from \"./AudioManager\";\nimport ConfettiEffect from \"./ConfettiEffect\";\nimport { calculateWinner } from \"./gameUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const {\n    theme,\n    themeOptions,\n    setTheme\n  } = useTheme();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [scores, setScores] = useState({\n    X: 0,\n    O: 0,\n    draw: 0\n  });\n  const [boardSize, setBoardSize] = useState(3);\n  const [gameMode, setGameMode] = useState(\"standard\"); // standard, timeAttack, powerUp\n  const [playerNames, setPlayerNames] = useState({\n    X: \"Player X\",\n    O: \"Player O\"\n  });\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [achievements, setAchievements] = useState({\n    firstWin: {\n      X: false,\n      O: false\n    },\n    threeWins: {\n      X: false,\n      O: false\n    },\n    fiveWins: {\n      X: false,\n      O: false\n    },\n    quickWin: false,\n    comeback: false\n  });\n  const audioManager = useRef(new AudioManager());\n  const timerRef = useRef(null);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  const currentPlayer = xIsNext ? \"X\" : \"O\";\n  const winner = calculateWinner(currentSquares, boardSize);\n  const gameIsDraw = !winner && currentSquares.every(square => square !== null);\n\n  // Handle time attack mode\n  useEffect(() => {\n    if (gameMode === \"timeAttack\" && !winner && !gameIsDraw) {\n      if (isTimerActive) {\n        timerRef.current = setInterval(() => {\n          setTimeLeft(prevTime => {\n            if (prevTime <= 1) {\n              clearInterval(timerRef.current);\n              // Auto-play a random valid move\n              autoPlayMove();\n              return 10; // Reset timer\n            }\n            return prevTime - 1;\n          });\n        }, 1000);\n      }\n    }\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [isTimerActive, gameMode, winner, gameIsDraw]);\n\n  // Begin timer on first move\n  useEffect(() => {\n    if (currentMove > 0 && gameMode === \"timeAttack\") {\n      setIsTimerActive(true);\n    }\n  }, [currentMove, gameMode]);\n\n  // Sound effects\n  useEffect(() => {\n    if (winner) {\n      audioManager.current.play(\"win\");\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 4000);\n\n      // Update scores\n      setScores(prev => ({\n        ...prev,\n        [winner]: prev[winner] + 1\n      }));\n\n      // Check for achievements\n      checkAchievements(winner);\n    } else if (gameIsDraw) {\n      audioManager.current.play(\"draw\");\n      setScores(prev => ({\n        ...prev,\n        draw: prev.draw + 1\n      }));\n    }\n  }, [winner, gameIsDraw]);\n  function autoPlayMove() {\n    const emptySquares = currentSquares.map((square, i) => square === null ? i : null).filter(i => i !== null);\n    if (emptySquares.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptySquares.length);\n      const nextSquares = currentSquares.slice();\n      nextSquares[emptySquares[randomIndex]] = xIsNext ? \"X\" : \"O\";\n      handlePlay(nextSquares);\n    }\n  }\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setIsAnimating(true);\n    setTimeout(() => setIsAnimating(false), 300);\n\n    // Reset timer for time attack mode\n    if (gameMode === \"timeAttack\") {\n      setTimeLeft(10);\n    }\n    audioManager.current.play(\"move\");\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setIsAnimating(true);\n    setTimeout(() => setIsAnimating(false), 300);\n    audioManager.current.play(\"jump\");\n  }\n  function handleRestart() {\n    setHistory([Array(boardSize * boardSize).fill(null)]);\n    setCurrentMove(0);\n    setIsTimerActive(false);\n    setTimeLeft(10);\n    audioManager.current.play(\"restart\");\n  }\n  function handleBoardSizeChange(size) {\n    setBoardSize(size);\n    setHistory([Array(size * size).fill(null)]);\n    setCurrentMove(0);\n    setIsTimerActive(false);\n    setTimeLeft(10);\n  }\n  function handleGameModeChange(mode) {\n    setGameMode(mode);\n    handleRestart();\n  }\n  function handleNameChange(player, name) {\n    setPlayerNames(prev => ({\n      ...prev,\n      [player]: name\n    }));\n  }\n  function checkAchievements(winner) {\n    const newAchievements = {\n      ...achievements\n    };\n\n    // First win\n    if (!achievements.firstWin[winner]) {\n      newAchievements.firstWin[winner] = true;\n      showAchievementNotification(`${playerNames[winner]} won their first game!`);\n    }\n\n    // Three wins\n    if (scores[winner] + 1 >= 3 && !achievements.threeWins[winner]) {\n      newAchievements.threeWins[winner] = true;\n      showAchievementNotification(`${playerNames[winner]} reached 3 wins!`);\n    }\n\n    // Five wins\n    if (scores[winner] + 1 >= 5 && !achievements.fiveWins[winner]) {\n      newAchievements.fiveWins[winner] = true;\n      showAchievementNotification(`${playerNames[winner]} reached 5 wins!`);\n    }\n\n    // Quick win (in 5 moves or less)\n    if (currentMove <= 8 && !achievements.quickWin) {\n      newAchievements.quickWin = true;\n      showAchievementNotification(\"Quick win achievement unlocked!\");\n    }\n    setAchievements(newAchievements);\n  }\n  function showAchievementNotification(message) {\n    // This would be implemented with a notification system\n    console.log(\"Achievement unlocked:\", message);\n    // For simplicity, we'll use an alert, but in a real app you'd use a toast or notification\n    alert(`🏆 ACHIEVEMENT UNLOCKED: ${message}`);\n  }\n  const moves = history.map((squares, move) => {\n    const isCurrent = move === currentMove;\n    let description;\n    if (move > 0) {\n      description = `Move #${move}`;\n    } else {\n      description = \"Game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `history-btn ${isCurrent ? \"current\" : \"\"}`,\n        onClick: () => jumpTo(move),\n        style: {\n          backgroundColor: isCurrent ? theme.boardBorder : \"transparent\",\n          color: isCurrent ? \"#fff\" : theme.textColor\n        },\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  });\n  let status;\n  if (winner) {\n    status = `Winner: ${playerNames[winner]}`;\n  } else if (gameIsDraw) {\n    status = \"Game ended in a draw!\";\n  } else {\n    status = `Next Player: ${playerNames[currentPlayer]}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      color: theme.textColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Tic Tac Toe Deluxe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"theme-select\",\n          children: \"Theme:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"theme-select\",\n          value: theme.name.toLowerCase(),\n          onChange: e => setTheme(e.target.value),\n          style: {\n            backgroundColor: theme.boardBg,\n            color: theme.textColor\n          },\n          children: themeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"board-size\",\n          children: \"Board Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"board-size\",\n          value: boardSize,\n          onChange: e => handleBoardSizeChange(parseInt(e.target.value)),\n          style: {\n            backgroundColor: theme.boardBg,\n            color: theme.textColor\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"3\\xD73\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 4,\n            children: \"4\\xD74\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 5,\n            children: \"5\\xD75\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"game-mode\",\n          children: \"Game Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"game-mode\",\n          value: gameMode,\n          onChange: e => handleGameModeChange(e.target.value),\n          style: {\n            backgroundColor: theme.boardBg,\n            color: theme.textColor\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"standard\",\n            children: \"Standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"timeAttack\",\n            children: \"Time Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-names\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"player-x\",\n          children: \"Player X:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"player-x\",\n          type: \"text\",\n          value: playerNames.X,\n          onChange: e => handleNameChange(\"X\", e.target.value),\n          style: {\n            backgroundColor: theme.boardBg,\n            color: theme.xColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"player-o\",\n          children: \"Player O:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"player-o\",\n          type: \"text\",\n          value: playerNames.O,\n          onChange: e => handleNameChange(\"O\", e.target.value),\n          style: {\n            backgroundColor: theme.boardBg,\n            color: theme.oColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), gameMode === \"timeAttack\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      style: {\n        color: timeLeft <= 3 ? theme.xColor : theme.textColor\n      },\n      children: [\"Time Left: \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${winner ? \"winner\" : \"\"}`,\n          style: {\n            color: winner ? theme.winColor : theme.textColor\n          },\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-container\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            size: boardSize,\n            xIsNext: xIsNext,\n            squares: currentSquares,\n            onPlay: handlePlay,\n            isAnimating: isAnimating,\n            gameOver: !!winner || gameIsDraw,\n            theme: theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-btn\",\n          onClick: handleRestart,\n          style: {\n            backgroundColor: theme.boardBorder,\n            color: \"#fff\"\n          },\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        style: {\n          backgroundColor: theme.boardBg\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      scores: scores,\n      playerNames: playerNames,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(ConfettiEffect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Rzy1o22wdZAN2g9CvhaAm1e+ss0=\", false, function () {\n  return [useTheme];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","useRef","useTheme","Board","ScoreBoard","AudioManager","ConfettiEffect","calculateWinner","jsxDEV","_jsxDEV","Game","_s","theme","themeOptions","setTheme","history","setHistory","Array","fill","currentMove","setCurrentMove","isAnimating","setIsAnimating","scores","setScores","X","O","draw","boardSize","setBoardSize","gameMode","setGameMode","playerNames","setPlayerNames","showConfetti","setShowConfetti","timeLeft","setTimeLeft","isTimerActive","setIsTimerActive","achievements","setAchievements","firstWin","threeWins","fiveWins","quickWin","comeback","audioManager","timerRef","currentSquares","xIsNext","currentPlayer","winner","gameIsDraw","every","square","current","setInterval","prevTime","clearInterval","autoPlayMove","play","setTimeout","prev","checkAchievements","emptySquares","map","i","filter","length","randomIndex","Math","floor","random","nextSquares","slice","handlePlay","nextHistory","jumpTo","nextMove","handleRestart","handleBoardSizeChange","size","handleGameModeChange","mode","handleNameChange","player","name","newAchievements","showAchievementNotification","message","console","log","alert","moves","squares","move","isCurrent","description","children","className","onClick","style","backgroundColor","boardBorder","color","textColor","fileName","_jsxFileName","lineNumber","columnNumber","status","htmlFor","id","value","toLowerCase","onChange","e","target","boardBg","option","label","parseInt","type","xColor","oColor","winColor","onPlay","gameOver","_c","$RefreshReg$"],"sources":["/Users/nimagolshahi/Downloads/tictactoe-game/src/Game.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { useTheme } from \"./ThemeContext\";\nimport Board from \"./Board\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport AudioManager from \"./AudioManager\";\nimport ConfettiEffect from \"./ConfettiEffect\";\nimport { calculateWinner } from \"./gameUtils\";\n\nexport default function Game() {\n  const { theme, themeOptions, setTheme } = useTheme();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [scores, setScores] = useState({ X: 0, O: 0, draw: 0 });\n  const [boardSize, setBoardSize] = useState(3);\n  const [gameMode, setGameMode] = useState(\"standard\"); // standard, timeAttack, powerUp\n  const [playerNames, setPlayerNames] = useState({ X: \"Player X\", O: \"Player O\" });\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [achievements, setAchievements] = useState({\n    firstWin: { X: false, O: false },\n    threeWins: { X: false, O: false },\n    fiveWins: { X: false, O: false },\n    quickWin: false,\n    comeback: false\n  });\n  \n  const audioManager = useRef(new AudioManager());\n  const timerRef = useRef(null);\n  \n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  const currentPlayer = xIsNext ? \"X\" : \"O\";\n  \n  const winner = calculateWinner(currentSquares, boardSize);\n  const gameIsDraw = !winner && currentSquares.every(square => square !== null);\n\n  // Handle time attack mode\n  useEffect(() => {\n    if (gameMode === \"timeAttack\" && !winner && !gameIsDraw) {\n      if (isTimerActive) {\n        timerRef.current = setInterval(() => {\n          setTimeLeft(prevTime => {\n            if (prevTime <= 1) {\n              clearInterval(timerRef.current);\n              // Auto-play a random valid move\n              autoPlayMove();\n              return 10; // Reset timer\n            }\n            return prevTime - 1;\n          });\n        }, 1000);\n      }\n    }\n    \n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [isTimerActive, gameMode, winner, gameIsDraw]);\n\n  // Begin timer on first move\n  useEffect(() => {\n    if (currentMove > 0 && gameMode === \"timeAttack\") {\n      setIsTimerActive(true);\n    }\n  }, [currentMove, gameMode]);\n\n  // Sound effects\n  useEffect(() => {\n    if (winner) {\n      audioManager.current.play(\"win\");\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 4000);\n      \n      // Update scores\n      setScores(prev => ({\n        ...prev,\n        [winner]: prev[winner] + 1\n      }));\n      \n      // Check for achievements\n      checkAchievements(winner);\n    } else if (gameIsDraw) {\n      audioManager.current.play(\"draw\");\n      setScores(prev => ({\n        ...prev,\n        draw: prev.draw + 1\n      }));\n    }\n  }, [winner, gameIsDraw]);\n\n  function autoPlayMove() {\n    const emptySquares = currentSquares.map((square, i) => \n      square === null ? i : null).filter(i => i !== null);\n    \n    if (emptySquares.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptySquares.length);\n      const nextSquares = currentSquares.slice();\n      nextSquares[emptySquares[randomIndex]] = xIsNext ? \"X\" : \"O\";\n      handlePlay(nextSquares);\n    }\n  }\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setIsAnimating(true);\n    setTimeout(() => setIsAnimating(false), 300);\n    \n    // Reset timer for time attack mode\n    if (gameMode === \"timeAttack\") {\n      setTimeLeft(10);\n    }\n\n    audioManager.current.play(\"move\");\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setIsAnimating(true);\n    setTimeout(() => setIsAnimating(false), 300);\n    audioManager.current.play(\"jump\");\n  }\n\n  function handleRestart() {\n    setHistory([Array(boardSize * boardSize).fill(null)]);\n    setCurrentMove(0);\n    setIsTimerActive(false);\n    setTimeLeft(10);\n    audioManager.current.play(\"restart\");\n  }\n\n  function handleBoardSizeChange(size) {\n    setBoardSize(size);\n    setHistory([Array(size * size).fill(null)]);\n    setCurrentMove(0);\n    setIsTimerActive(false);\n    setTimeLeft(10);\n  }\n  \n  function handleGameModeChange(mode) {\n    setGameMode(mode);\n    handleRestart();\n  }\n  \n  function handleNameChange(player, name) {\n    setPlayerNames(prev => ({\n      ...prev,\n      [player]: name\n    }));\n  }\n  \n  function checkAchievements(winner) {\n    const newAchievements = {...achievements};\n    \n    // First win\n    if (!achievements.firstWin[winner]) {\n      newAchievements.firstWin[winner] = true;\n      showAchievementNotification(`${playerNames[winner]} won their first game!`);\n    }\n    \n    // Three wins\n    if (scores[winner] + 1 >= 3 && !achievements.threeWins[winner]) {\n      newAchievements.threeWins[winner] = true;\n      showAchievementNotification(`${playerNames[winner]} reached 3 wins!`);\n    }\n    \n    // Five wins\n    if (scores[winner] + 1 >= 5 && !achievements.fiveWins[winner]) {\n      newAchievements.fiveWins[winner] = true;\n      showAchievementNotification(`${playerNames[winner]} reached 5 wins!`);\n    }\n    \n    // Quick win (in 5 moves or less)\n    if (currentMove <= 8 && !achievements.quickWin) {\n      newAchievements.quickWin = true;\n      showAchievementNotification(\"Quick win achievement unlocked!\");\n    }\n    \n    setAchievements(newAchievements);\n  }\n  \n  function showAchievementNotification(message) {\n    // This would be implemented with a notification system\n    console.log(\"Achievement unlocked:\", message);\n    // For simplicity, we'll use an alert, but in a real app you'd use a toast or notification\n    alert(`🏆 ACHIEVEMENT UNLOCKED: ${message}`);\n  }\n\n  const moves = history.map((squares, move) => {\n    const isCurrent = move === currentMove;\n    let description;\n    if (move > 0) {\n      description = `Move #${move}`;\n    } else {\n      description = \"Game start\";\n    }\n    return (\n      <li key={move}>\n        <button\n          className={`history-btn ${isCurrent ? \"current\" : \"\"}`}\n          onClick={() => jumpTo(move)}\n          style={{\n            backgroundColor: isCurrent ? theme.boardBorder : \"transparent\",\n            color: isCurrent ? \"#fff\" : theme.textColor\n          }}\n        >\n          {description}\n        </button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = `Winner: ${playerNames[winner]}`;\n  } else if (gameIsDraw) {\n    status = \"Game ended in a draw!\";\n  } else {\n    status = `Next Player: ${playerNames[currentPlayer]}`;\n  }\n\n  return (\n    <div className=\"container\" style={{ color: theme.textColor }}>\n      <h1 className=\"game-title\">Tic Tac Toe Deluxe</h1>\n\n      <div className=\"game-options\">\n        <div className=\"option-group\">\n          <label htmlFor=\"theme-select\">Theme:</label>\n          <select\n            id=\"theme-select\"\n            value={theme.name.toLowerCase()}\n            onChange={(e) => setTheme(e.target.value)}\n            style={{ backgroundColor: theme.boardBg, color: theme.textColor }}\n          >\n            {themeOptions.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"option-group\">\n          <label htmlFor=\"board-size\">Board Size:</label>\n          <select\n            id=\"board-size\"\n            value={boardSize}\n            onChange={(e) => handleBoardSizeChange(parseInt(e.target.value))}\n            style={{ backgroundColor: theme.boardBg, color: theme.textColor }}\n          >\n            <option value={3}>3×3</option>\n            <option value={4}>4×4</option>\n            <option value={5}>5×5</option>\n          </select>\n        </div>\n        <div className=\"option-group\">\n          <label htmlFor=\"game-mode\">Game Mode:</label>\n          <select\n            id=\"game-mode\"\n            value={gameMode}\n            onChange={(e) => handleGameModeChange(e.target.value)}\n            style={{ backgroundColor: theme.boardBg, color: theme.textColor }}\n          >\n            <option value=\"standard\">Standard</option>\n            <option value=\"timeAttack\">Time Attack</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"player-names\">\n        <div className=\"player-input\">\n          <label htmlFor=\"player-x\">Player X:</label>\n          <input\n            id=\"player-x\"\n            type=\"text\"\n            value={playerNames.X}\n            onChange={(e) => handleNameChange(\"X\", e.target.value)}\n            style={{ backgroundColor: theme.boardBg, color: theme.xColor }}\n          />\n        </div>\n        <div className=\"player-input\">\n          <label htmlFor=\"player-o\">Player O:</label>\n          <input\n            id=\"player-o\"\n            type=\"text\"\n            value={playerNames.O}\n            onChange={(e) => handleNameChange(\"O\", e.target.value)}\n            style={{ backgroundColor: theme.boardBg, color: theme.oColor }}\n          />\n        </div>\n      </div>\n\n      {gameMode === \"timeAttack\" && (\n        <div\n          className=\"timer\"\n          style={{ color: timeLeft <= 3 ? theme.xColor : theme.textColor }}\n        >\n          Time Left: {timeLeft}s\n        </div>\n      )}\n\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <div\n            className={`status ${winner ? \"winner\" : \"\"}`}\n            style={{\n              color: winner ? theme.winColor : theme.textColor,\n            }}\n          >\n            {status}\n          </div>\n\n          <div className=\"board-container\">\n            <Board\n              size={boardSize}\n              xIsNext={xIsNext}\n              squares={currentSquares}\n              onPlay={handlePlay}\n              isAnimating={isAnimating}\n              gameOver={!!winner || gameIsDraw}\n              theme={theme}\n            />\n          </div>\n\n          <button\n            className=\"restart-btn\"\n            onClick={handleRestart}\n            style={{ backgroundColor: theme.boardBorder, color: \"#fff\" }}\n          >\n            Restart Game\n          </button>\n        </div>\n\n        <div className=\"game-info\" style={{ backgroundColor: theme.boardBg }}>\n          <h2>Game History</h2>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n\n      <ScoreBoard scores={scores} playerNames={playerNames} theme={theme} />\n\n      {showConfetti && <ConfettiEffect />}\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,eAAe,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC,KAAK;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAACkB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAC7D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EACtD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC;IAAE0B,CAAC,EAAE,UAAU;IAAEC,CAAC,EAAE;EAAW,CAAC,CAAC;EAChF,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC;IAC/C2C,QAAQ,EAAE;MAAEjB,CAAC,EAAE,KAAK;MAAEC,CAAC,EAAE;IAAM,CAAC;IAChCiB,SAAS,EAAE;MAAElB,CAAC,EAAE,KAAK;MAAEC,CAAC,EAAE;IAAM,CAAC;IACjCkB,QAAQ,EAAE;MAAEnB,CAAC,EAAE,KAAK;MAAEC,CAAC,EAAE;IAAM,CAAC;IAChCmB,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG9C,MAAM,CAAC,IAAII,YAAY,CAAC,CAAC,CAAC;EAC/C,MAAM2C,QAAQ,GAAG/C,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMgD,cAAc,GAAGlC,OAAO,CAACI,WAAW,CAAC;EAC3C,MAAM+B,OAAO,GAAG/B,WAAW,GAAG,CAAC,KAAK,CAAC;EACrC,MAAMgC,aAAa,GAAGD,OAAO,GAAG,GAAG,GAAG,GAAG;EAEzC,MAAME,MAAM,GAAG7C,eAAe,CAAC0C,cAAc,EAAErB,SAAS,CAAC;EACzD,MAAMyB,UAAU,GAAG,CAACD,MAAM,IAAIH,cAAc,CAACK,KAAK,CAACC,MAAM,IAAIA,MAAM,KAAK,IAAI,CAAC;;EAE7E;EACAvD,SAAS,CAAC,MAAM;IACd,IAAI8B,QAAQ,KAAK,YAAY,IAAI,CAACsB,MAAM,IAAI,CAACC,UAAU,EAAE;MACvD,IAAIf,aAAa,EAAE;QACjBU,QAAQ,CAACQ,OAAO,GAAGC,WAAW,CAAC,MAAM;UACnCpB,WAAW,CAACqB,QAAQ,IAAI;YACtB,IAAIA,QAAQ,IAAI,CAAC,EAAE;cACjBC,aAAa,CAACX,QAAQ,CAACQ,OAAO,CAAC;cAC/B;cACAI,YAAY,CAAC,CAAC;cACd,OAAO,EAAE,CAAC,CAAC;YACb;YACA,OAAOF,QAAQ,GAAG,CAAC;UACrB,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC;MACV;IACF;IAEA,OAAO,MAAM;MACX,IAAIV,QAAQ,CAACQ,OAAO,EAAEG,aAAa,CAACX,QAAQ,CAACQ,OAAO,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAClB,aAAa,EAAER,QAAQ,EAAEsB,MAAM,EAAEC,UAAU,CAAC,CAAC;;EAEjD;EACArD,SAAS,CAAC,MAAM;IACd,IAAImB,WAAW,GAAG,CAAC,IAAIW,QAAQ,KAAK,YAAY,EAAE;MAChDS,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC,EAAE,CAACpB,WAAW,EAAEW,QAAQ,CAAC,CAAC;;EAE3B;EACA9B,SAAS,CAAC,MAAM;IACd,IAAIoD,MAAM,EAAE;MACVL,YAAY,CAACS,OAAO,CAACK,IAAI,CAAC,KAAK,CAAC;MAChC1B,eAAe,CAAC,IAAI,CAAC;MACrB2B,UAAU,CAAC,MAAM3B,eAAe,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;;MAE9C;MACAX,SAAS,CAACuC,IAAI,KAAK;QACjB,GAAGA,IAAI;QACP,CAACX,MAAM,GAAGW,IAAI,CAACX,MAAM,CAAC,GAAG;MAC3B,CAAC,CAAC,CAAC;;MAEH;MACAY,iBAAiB,CAACZ,MAAM,CAAC;IAC3B,CAAC,MAAM,IAAIC,UAAU,EAAE;MACrBN,YAAY,CAACS,OAAO,CAACK,IAAI,CAAC,MAAM,CAAC;MACjCrC,SAAS,CAACuC,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPpC,IAAI,EAAEoC,IAAI,CAACpC,IAAI,GAAG;MACpB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACyB,MAAM,EAAEC,UAAU,CAAC,CAAC;EAExB,SAASO,YAAYA,CAAA,EAAG;IACtB,MAAMK,YAAY,GAAGhB,cAAc,CAACiB,GAAG,CAAC,CAACX,MAAM,EAAEY,CAAC,KAChDZ,MAAM,KAAK,IAAI,GAAGY,CAAC,GAAG,IAAI,CAAC,CAACC,MAAM,CAACD,CAAC,IAAIA,CAAC,KAAK,IAAI,CAAC;IAErD,IAAIF,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,YAAY,CAACI,MAAM,CAAC;MACnE,MAAMK,WAAW,GAAGzB,cAAc,CAAC0B,KAAK,CAAC,CAAC;MAC1CD,WAAW,CAACT,YAAY,CAACK,WAAW,CAAC,CAAC,GAAGpB,OAAO,GAAG,GAAG,GAAG,GAAG;MAC5D0B,UAAU,CAACF,WAAW,CAAC;IACzB;EACF;EAEA,SAASE,UAAUA,CAACF,WAAW,EAAE;IAC/B,MAAMG,WAAW,GAAG,CAAC,GAAG9D,OAAO,CAAC4D,KAAK,CAAC,CAAC,EAAExD,WAAW,GAAG,CAAC,CAAC,EAAEuD,WAAW,CAAC;IACvE1D,UAAU,CAAC6D,WAAW,CAAC;IACvBzD,cAAc,CAACyD,WAAW,CAACR,MAAM,GAAG,CAAC,CAAC;IACtC/C,cAAc,CAAC,IAAI,CAAC;IACpBwC,UAAU,CAAC,MAAMxC,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;;IAE5C;IACA,IAAIQ,QAAQ,KAAK,YAAY,EAAE;MAC7BO,WAAW,CAAC,EAAE,CAAC;IACjB;IAEAU,YAAY,CAACS,OAAO,CAACK,IAAI,CAAC,MAAM,CAAC;EACnC;EAEA,SAASiB,MAAMA,CAACC,QAAQ,EAAE;IACxB3D,cAAc,CAAC2D,QAAQ,CAAC;IACxBzD,cAAc,CAAC,IAAI,CAAC;IACpBwC,UAAU,CAAC,MAAMxC,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IAC5CyB,YAAY,CAACS,OAAO,CAACK,IAAI,CAAC,MAAM,CAAC;EACnC;EAEA,SAASmB,aAAaA,CAAA,EAAG;IACvBhE,UAAU,CAAC,CAACC,KAAK,CAACW,SAAS,GAAGA,SAAS,CAAC,CAACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrDE,cAAc,CAAC,CAAC,CAAC;IACjBmB,gBAAgB,CAAC,KAAK,CAAC;IACvBF,WAAW,CAAC,EAAE,CAAC;IACfU,YAAY,CAACS,OAAO,CAACK,IAAI,CAAC,SAAS,CAAC;EACtC;EAEA,SAASoB,qBAAqBA,CAACC,IAAI,EAAE;IACnCrD,YAAY,CAACqD,IAAI,CAAC;IAClBlE,UAAU,CAAC,CAACC,KAAK,CAACiE,IAAI,GAAGA,IAAI,CAAC,CAAChE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3CE,cAAc,CAAC,CAAC,CAAC;IACjBmB,gBAAgB,CAAC,KAAK,CAAC;IACvBF,WAAW,CAAC,EAAE,CAAC;EACjB;EAEA,SAAS8C,oBAAoBA,CAACC,IAAI,EAAE;IAClCrD,WAAW,CAACqD,IAAI,CAAC;IACjBJ,aAAa,CAAC,CAAC;EACjB;EAEA,SAASK,gBAAgBA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACtCtD,cAAc,CAAC8B,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACuB,MAAM,GAAGC;IACZ,CAAC,CAAC,CAAC;EACL;EAEA,SAASvB,iBAAiBA,CAACZ,MAAM,EAAE;IACjC,MAAMoC,eAAe,GAAG;MAAC,GAAGhD;IAAY,CAAC;;IAEzC;IACA,IAAI,CAACA,YAAY,CAACE,QAAQ,CAACU,MAAM,CAAC,EAAE;MAClCoC,eAAe,CAAC9C,QAAQ,CAACU,MAAM,CAAC,GAAG,IAAI;MACvCqC,2BAA2B,CAAC,GAAGzD,WAAW,CAACoB,MAAM,CAAC,wBAAwB,CAAC;IAC7E;;IAEA;IACA,IAAI7B,MAAM,CAAC6B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACZ,YAAY,CAACG,SAAS,CAACS,MAAM,CAAC,EAAE;MAC9DoC,eAAe,CAAC7C,SAAS,CAACS,MAAM,CAAC,GAAG,IAAI;MACxCqC,2BAA2B,CAAC,GAAGzD,WAAW,CAACoB,MAAM,CAAC,kBAAkB,CAAC;IACvE;;IAEA;IACA,IAAI7B,MAAM,CAAC6B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACZ,YAAY,CAACI,QAAQ,CAACQ,MAAM,CAAC,EAAE;MAC7DoC,eAAe,CAAC5C,QAAQ,CAACQ,MAAM,CAAC,GAAG,IAAI;MACvCqC,2BAA2B,CAAC,GAAGzD,WAAW,CAACoB,MAAM,CAAC,kBAAkB,CAAC;IACvE;;IAEA;IACA,IAAIjC,WAAW,IAAI,CAAC,IAAI,CAACqB,YAAY,CAACK,QAAQ,EAAE;MAC9C2C,eAAe,CAAC3C,QAAQ,GAAG,IAAI;MAC/B4C,2BAA2B,CAAC,iCAAiC,CAAC;IAChE;IAEAhD,eAAe,CAAC+C,eAAe,CAAC;EAClC;EAEA,SAASC,2BAA2BA,CAACC,OAAO,EAAE;IAC5C;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,OAAO,CAAC;IAC7C;IACAG,KAAK,CAAC,4BAA4BH,OAAO,EAAE,CAAC;EAC9C;EAEA,MAAMI,KAAK,GAAG/E,OAAO,CAACmD,GAAG,CAAC,CAAC6B,OAAO,EAAEC,IAAI,KAAK;IAC3C,MAAMC,SAAS,GAAGD,IAAI,KAAK7E,WAAW;IACtC,IAAI+E,WAAW;IACf,IAAIF,IAAI,GAAG,CAAC,EAAE;MACZE,WAAW,GAAG,SAASF,IAAI,EAAE;IAC/B,CAAC,MAAM;MACLE,WAAW,GAAG,YAAY;IAC5B;IACA,oBACEzF,OAAA;MAAA0F,QAAA,eACE1F,OAAA;QACE2F,SAAS,EAAE,eAAeH,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;QACvDI,OAAO,EAAEA,CAAA,KAAMvB,MAAM,CAACkB,IAAI,CAAE;QAC5BM,KAAK,EAAE;UACLC,eAAe,EAAEN,SAAS,GAAGrF,KAAK,CAAC4F,WAAW,GAAG,aAAa;UAC9DC,KAAK,EAAER,SAAS,GAAG,MAAM,GAAGrF,KAAK,CAAC8F;QACpC,CAAE;QAAAP,QAAA,EAEDD;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC,GAVFd,IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWT,CAAC;EAET,CAAC,CAAC;EAEF,IAAIC,MAAM;EACV,IAAI3D,MAAM,EAAE;IACV2D,MAAM,GAAG,WAAW/E,WAAW,CAACoB,MAAM,CAAC,EAAE;EAC3C,CAAC,MAAM,IAAIC,UAAU,EAAE;IACrB0D,MAAM,GAAG,uBAAuB;EAClC,CAAC,MAAM;IACLA,MAAM,GAAG,gBAAgB/E,WAAW,CAACmB,aAAa,CAAC,EAAE;EACvD;EAEA,oBACE1C,OAAA;IAAK2F,SAAS,EAAC,WAAW;IAACE,KAAK,EAAE;MAAEG,KAAK,EAAE7F,KAAK,CAAC8F;IAAU,CAAE;IAAAP,QAAA,gBAC3D1F,OAAA;MAAI2F,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElDrG,OAAA;MAAK2F,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3B1F,OAAA;QAAK2F,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3B1F,OAAA;UAAOuG,OAAO,EAAC,cAAc;UAAAb,QAAA,EAAC;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5CrG,OAAA;UACEwG,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAEtG,KAAK,CAAC2E,IAAI,CAAC4B,WAAW,CAAC,CAAE;UAChCC,QAAQ,EAAGC,CAAC,IAAKvG,QAAQ,CAACuG,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UAC1CZ,KAAK,EAAE;YAAEC,eAAe,EAAE3F,KAAK,CAAC2G,OAAO;YAAEd,KAAK,EAAE7F,KAAK,CAAC8F;UAAU,CAAE;UAAAP,QAAA,EAEjEtF,YAAY,CAACqD,GAAG,CAAEsD,MAAM,iBACvB/G,OAAA;YAA2ByG,KAAK,EAAEM,MAAM,CAACN,KAAM;YAAAf,QAAA,EAC5CqB,MAAM,CAACC;UAAK,GADFD,MAAM,CAACN,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEjB,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNrG,OAAA;QAAK2F,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3B1F,OAAA;UAAOuG,OAAO,EAAC,YAAY;UAAAb,QAAA,EAAC;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CrG,OAAA;UACEwG,EAAE,EAAC,YAAY;UACfC,KAAK,EAAEtF,SAAU;UACjBwF,QAAQ,EAAGC,CAAC,IAAKpC,qBAAqB,CAACyC,QAAQ,CAACL,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC,CAAE;UACjEZ,KAAK,EAAE;YAAEC,eAAe,EAAE3F,KAAK,CAAC2G,OAAO;YAAEd,KAAK,EAAE7F,KAAK,CAAC8F;UAAU,CAAE;UAAAP,QAAA,gBAElE1F,OAAA;YAAQyG,KAAK,EAAE,CAAE;YAAAf,QAAA,EAAC;UAAG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9BrG,OAAA;YAAQyG,KAAK,EAAE,CAAE;YAAAf,QAAA,EAAC;UAAG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9BrG,OAAA;YAAQyG,KAAK,EAAE,CAAE;YAAAf,QAAA,EAAC;UAAG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNrG,OAAA;QAAK2F,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3B1F,OAAA;UAAOuG,OAAO,EAAC,WAAW;UAAAb,QAAA,EAAC;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7CrG,OAAA;UACEwG,EAAE,EAAC,WAAW;UACdC,KAAK,EAAEpF,QAAS;UAChBsF,QAAQ,EAAGC,CAAC,IAAKlC,oBAAoB,CAACkC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UACtDZ,KAAK,EAAE;YAAEC,eAAe,EAAE3F,KAAK,CAAC2G,OAAO;YAAEd,KAAK,EAAE7F,KAAK,CAAC8F;UAAU,CAAE;UAAAP,QAAA,gBAElE1F,OAAA;YAAQyG,KAAK,EAAC,UAAU;YAAAf,QAAA,EAAC;UAAQ;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1CrG,OAAA;YAAQyG,KAAK,EAAC,YAAY;YAAAf,QAAA,EAAC;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrG,OAAA;MAAK2F,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3B1F,OAAA;QAAK2F,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3B1F,OAAA;UAAOuG,OAAO,EAAC,UAAU;UAAAb,QAAA,EAAC;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CrG,OAAA;UACEwG,EAAE,EAAC,UAAU;UACbU,IAAI,EAAC,MAAM;UACXT,KAAK,EAAElF,WAAW,CAACP,CAAE;UACrB2F,QAAQ,EAAGC,CAAC,IAAKhC,gBAAgB,CAAC,GAAG,EAAEgC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UACvDZ,KAAK,EAAE;YAAEC,eAAe,EAAE3F,KAAK,CAAC2G,OAAO;YAAEd,KAAK,EAAE7F,KAAK,CAACgH;UAAO;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrG,OAAA;QAAK2F,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3B1F,OAAA;UAAOuG,OAAO,EAAC,UAAU;UAAAb,QAAA,EAAC;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CrG,OAAA;UACEwG,EAAE,EAAC,UAAU;UACbU,IAAI,EAAC,MAAM;UACXT,KAAK,EAAElF,WAAW,CAACN,CAAE;UACrB0F,QAAQ,EAAGC,CAAC,IAAKhC,gBAAgB,CAAC,GAAG,EAAEgC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UACvDZ,KAAK,EAAE;YAAEC,eAAe,EAAE3F,KAAK,CAAC2G,OAAO;YAAEd,KAAK,EAAE7F,KAAK,CAACiH;UAAO;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELhF,QAAQ,KAAK,YAAY,iBACxBrB,OAAA;MACE2F,SAAS,EAAC,OAAO;MACjBE,KAAK,EAAE;QAAEG,KAAK,EAAErE,QAAQ,IAAI,CAAC,GAAGxB,KAAK,CAACgH,MAAM,GAAGhH,KAAK,CAAC8F;MAAU,CAAE;MAAAP,QAAA,GAClE,aACY,EAAC/D,QAAQ,EAAC,GACvB;IAAA;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eAEDrG,OAAA;MAAK2F,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB1F,OAAA;QAAK2F,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzB1F,OAAA;UACE2F,SAAS,EAAE,UAAUhD,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC9CkD,KAAK,EAAE;YACLG,KAAK,EAAErD,MAAM,GAAGxC,KAAK,CAACkH,QAAQ,GAAGlH,KAAK,CAAC8F;UACzC,CAAE;UAAAP,QAAA,EAEDY;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENrG,OAAA;UAAK2F,SAAS,EAAC,iBAAiB;UAAAD,QAAA,eAC9B1F,OAAA,CAACN,KAAK;YACJ+E,IAAI,EAAEtD,SAAU;YAChBsB,OAAO,EAAEA,OAAQ;YACjB6C,OAAO,EAAE9C,cAAe;YACxB8E,MAAM,EAAEnD,UAAW;YACnBvD,WAAW,EAAEA,WAAY;YACzB2G,QAAQ,EAAE,CAAC,CAAC5E,MAAM,IAAIC,UAAW;YACjCzC,KAAK,EAAEA;UAAM;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENrG,OAAA;UACE2F,SAAS,EAAC,aAAa;UACvBC,OAAO,EAAErB,aAAc;UACvBsB,KAAK,EAAE;YAAEC,eAAe,EAAE3F,KAAK,CAAC4F,WAAW;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAN,QAAA,EAC9D;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENrG,OAAA;QAAK2F,SAAS,EAAC,WAAW;QAACE,KAAK,EAAE;UAAEC,eAAe,EAAE3F,KAAK,CAAC2G;QAAQ,CAAE;QAAApB,QAAA,gBACnE1F,OAAA;UAAA0F,QAAA,EAAI;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBrG,OAAA;UAAA0F,QAAA,EAAKL;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrG,OAAA,CAACL,UAAU;MAACmB,MAAM,EAAEA,MAAO;MAACS,WAAW,EAAEA,WAAY;MAACpB,KAAK,EAAEA;IAAM;MAAA+F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAErE5E,YAAY,iBAAIzB,OAAA,CAACH,cAAc;MAAAqG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAACnG,EAAA,CAlVuBD,IAAI;EAAA,QACgBR,QAAQ;AAAA;AAAA+H,EAAA,GAD5BvH,IAAI;AAAA,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}