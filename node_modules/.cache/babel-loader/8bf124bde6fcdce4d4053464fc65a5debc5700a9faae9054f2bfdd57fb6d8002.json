{"ast":null,"code":"var _jsxFileName = \"/Users/nimagolshahi/Downloads/tictactoe-game/src/Board.js\";\nimport { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  size = 3,\n  xIsNext,\n  squares,\n  onPlay,\n  isAnimating,\n  gameOver,\n  theme\n}) {\n  function handleClick(i) {\n    if (squares[i] || gameOver || isAnimating) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n\n  // Create a board with dynamic size\n  const renderBoard = () => {\n    const boardRows = [];\n    for (let row = 0; row < size; row++) {\n      const rowSquares = [];\n      for (let col = 0; col < size; col++) {\n        const i = row * size + col;\n        rowSquares.push(renderSquare(i));\n      }\n      boardRows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: rowSquares\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n    }\n    return boardRows;\n  };\n  const renderSquare = i => {\n    const value = squares[i];\n    const squareClass = `square ${(value === null || value === void 0 ? void 0 : value.toLowerCase()) || \"\"}`;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: value,\n      onSquareClick: () => handleClick(i),\n      className: squareClass,\n      theme: theme,\n      isAnimating: isAnimating && value\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    style: {\n      gridTemplateColumns: `repeat(${size}, 1fr)`,\n      backgroundColor: theme.boardBg,\n      borderColor: theme.boardBorder\n    },\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","useEffect","Square","jsxDEV","_jsxDEV","Board","size","xIsNext","squares","onPlay","isAnimating","gameOver","theme","handleClick","i","nextSquares","slice","renderBoard","boardRows","row","rowSquares","col","push","renderSquare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","squareClass","toLowerCase","onSquareClick","style","gridTemplateColumns","backgroundColor","boardBg","borderColor","boardBorder","_c","$RefreshReg$"],"sources":["/Users/nimagolshahi/Downloads/tictactoe-game/src/Board.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\n\nexport default function Board({ size = 3, xIsNext, squares, onPlay, isAnimating, gameOver, theme }) {\n  function handleClick(i) {\n    if (squares[i] || gameOver || isAnimating) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n\n  // Create a board with dynamic size\n  const renderBoard = () => {\n    const boardRows = [];\n    \n    for (let row = 0; row < size; row++) {\n      const rowSquares = [];\n      for (let col = 0; col < size; col++) {\n        const i = row * size + col;\n        rowSquares.push(renderSquare(i));\n      }\n      boardRows.push(\n        <div key={row} className=\"board-row\">\n          {rowSquares}\n        </div>\n      );\n    }\n    \n    return boardRows;\n  };\n\n  const renderSquare = (i) => {\n    const value = squares[i];\n    const squareClass = `square ${value?.toLowerCase() || \"\"}`;\n    \n    return (\n      <Square\n        key={i}\n        value={value}\n        onSquareClick={() => handleClick(i)}\n        className={squareClass}\n        theme={theme}\n        isAnimating={isAnimating && value}\n      />\n    );\n  };\n\n  return (\n    <div \n      className=\"board\" \n      style={{ \n        gridTemplateColumns: `repeat(${size}, 1fr)`,\n        backgroundColor: theme.boardBg,\n        borderColor: theme.boardBorder\n      }}\n    >\n      {renderBoard()}\n    </div>\n  );\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,KAAKA,CAAC;EAAEC,IAAI,GAAG,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,MAAM;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EAClG,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIN,OAAO,CAACM,CAAC,CAAC,IAAIH,QAAQ,IAAID,WAAW,EAAE;MACzC;IACF;IACA,MAAMK,WAAW,GAAGP,OAAO,CAACQ,KAAK,CAAC,CAAC;IACnCD,WAAW,CAACD,CAAC,CAAC,GAAGP,OAAO,GAAG,GAAG,GAAG,GAAG;IACpCE,MAAM,CAACM,WAAW,CAAC;EACrB;;EAEA;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAG,EAAE;IAEpB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGb,IAAI,EAAEa,GAAG,EAAE,EAAE;MACnC,MAAMC,UAAU,GAAG,EAAE;MACrB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGf,IAAI,EAAEe,GAAG,EAAE,EAAE;QACnC,MAAMP,CAAC,GAAGK,GAAG,GAAGb,IAAI,GAAGe,GAAG;QAC1BD,UAAU,CAACE,IAAI,CAACC,YAAY,CAACT,CAAC,CAAC,CAAC;MAClC;MACAI,SAAS,CAACI,IAAI,cACZlB,OAAA;QAAeoB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACjCL;MAAU,GADHD,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACP,CAAC;IACH;IAEA,OAAOX,SAAS;EAClB,CAAC;EAED,MAAMK,YAAY,GAAIT,CAAC,IAAK;IAC1B,MAAMgB,KAAK,GAAGtB,OAAO,CAACM,CAAC,CAAC;IACxB,MAAMiB,WAAW,GAAG,UAAU,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,WAAW,CAAC,CAAC,KAAI,EAAE,EAAE;IAE1D,oBACE5B,OAAA,CAACF,MAAM;MAEL4B,KAAK,EAAEA,KAAM;MACbG,aAAa,EAAEA,CAAA,KAAMpB,WAAW,CAACC,CAAC,CAAE;MACpCU,SAAS,EAAEO,WAAY;MACvBnB,KAAK,EAAEA,KAAM;MACbF,WAAW,EAAEA,WAAW,IAAIoB;IAAM,GAL7BhB,CAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CAAC;EAEN,CAAC;EAED,oBACEzB,OAAA;IACEoB,SAAS,EAAC,OAAO;IACjBU,KAAK,EAAE;MACLC,mBAAmB,EAAE,UAAU7B,IAAI,QAAQ;MAC3C8B,eAAe,EAAExB,KAAK,CAACyB,OAAO;MAC9BC,WAAW,EAAE1B,KAAK,CAAC2B;IACrB,CAAE;IAAAd,QAAA,EAEDR,WAAW,CAAC;EAAC;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACW,EAAA,GA1DuBnC,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}